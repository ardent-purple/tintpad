* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html,
body {
  font-family: 'Montserrat', sans-serif;
  font-optical-sizing: auto;
  font-weight: 500;
  font-style: normal;
}

body {
  overflow: hidden;
}

#root {
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  background-color: var(--current-color);
}

/* hint start */

.hint-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
}

.hint {
  height: 100%;
  width: auto;
  margin: 0 auto;
  padding: 2rem;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

@media (orientation: landscape) {
  .hint {
    flex-direction: row;
  }
}

.hint-image-wrapper {
  aspect-ratio: 1 / 1;
  display: flex;
  align-items: center;
  justify-content: center;
}

.hint-image {
  max-width: 60%;
  display: block;
}

.hint-text {
  text-align: center;
  margin-top: 1rem;
  font-size: 3rem;
  padding: 1rem;
}

.hint-hide-instruction {
  text-align: center;
  margin-top: 0.5rem;

  font-size: 2rem;
}

.opacity-transition {
  transition: opacity 0.3s ease-in-out;
}

.hide {
  opacity: 0;
}

@keyframes leftRight {
  0% {
    transform: translateX(-20%);
  }
  50% {
    transform: translateX(20%);
  }
  100% {
    transform: translateX(-20%);
  }
}

@keyframes upDown {
  0% {
    transform: translateY(-20%);
  }
  50% {
    transform: translateY(20%);
  }
  100% {
    transform: translateY(-20%);
  }
}

@keyframes tap {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(20%);
  }
  100% {
    transform: translateY(0);
  }
}

.hint-image-left-right {
  animation: leftRight 2.5s ease-in-out infinite;
}

.hint-image-up-down {
  animation: upDown 2.5s ease-in-out infinite;
}

.hint-image-tap {
  animation: tap 1s ease-in-out infinite;
}

/* hint end */

/* control start*/

.control-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;

  overflow: hidden;

  display: flex;
  align-items: center;
  justify-content: center;
}

.control {
  flex: 1 1 0;
  z-index: 100;

  display: grid;
  grid-template-rows: minmax(auto, 1fr) auto minmax(auto, 1fr);
  gap: 1rem;
  padding: 2rem;

  max-width: 100vw;
  max-height: 90vh;

  transition: transform 0.3s ease-in-out;
}

.control-row {
  display: grid;
  grid-auto-columns: 1fr;
  grid-auto-flow: column;
  gap: 1rem;
}

.control-text {
  font-size: 2.5rem;
  text-align: center;
  padding: 0 1rem;
}

.control-item {
  border: 0.5rem solid #000;
  background-color: #fff;
  border-radius: 2rem;

  width: 100%;
  height: 100%;
  padding: 1rem;

  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}

.control-icon {
  height: 6rem;
  width: 6rem;
  object-fit: contain;
}

.control-hidden {
  transform: translateY(150vh);
}

.control-item-none {
  display: none;
}

/* control end */

/* animations start */

.animation {
  transition: transform 0.3s ease-in-out;
}

.animation-hidden {
  transform: translateY(-150vh);
}

.animation-content {
  margin-top: 1rem;
  display: flex;
  gap: 1rem;
}

@media (orientation: portrait) {
  .animation-content {
    flex-direction: column;
  }
}

@media (orientation: landscape) {
  .animation-content {
    flex-direction: row;
  }
}

.animation-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, 1fr);
  gap: 1rem;
}

.animation-item {
  border-radius: 2rem;
  border-width: 0.5rem;

  cursor: pointer;

  background-color: var(--current-color);

  min-height: 20vh;
  min-width: 20vw;

  display: flex;
  align-items: center;
  justify-content: center;

  font-size: 2.5rem;
}

.animation-controls {
  display: flex;
  gap: 1rem;
  flex-direction: column;
}

.animation-controls > * {
  flex: 1 1 0;
}

#animation-back {
  border: 0.5rem solid #000;
}

.animation-item-pick {
  border-style: dashed;
}

.animation-item-picked {
  border-style: solid;
}

/*
animations:
- value from 50 to 100
- value from 0 to 100
- value from 0 to 100 fast
- hue rotate ease
- hue rotate steps
- hue rotate random smooth
*/

@keyframes animation-0 {
  0% {
    filter: brightness(0.5);
  }
  50% {
    filter: brightness(1);
  }
  100% {
    filter: brightness(0.5);
  }
}

.animation-0 {
  animation: animation-0 3s ease-in-out infinite;
}

@keyframes animation-1 {
  0% {
    filter: brightness(0);
  }
  50% {
    filter: brightness(1);
  }
  100% {
    filter: brightness(0);
  }
}

.animation-1 {
  animation: animation-1 3s ease-in-out infinite;
}

@keyframes animation-2 {
  0% {
    filter: brightness(0);
  }
  100% {
    filter: brightness(1);
  }
}

.animation-2 {
  animation: animation-2 1s steps(2, jump-none) infinite;
}

@keyframes animation-3 {
  0% {
    filter: hue-rotate(0deg);
  }
  100% {
    filter: hue-rotate(360deg);
  }
}

.animation-3 {
  animation: animation-3 5s linear infinite;
}

@keyframes animation-4 {
  0% {
    filter: hue-rotate(0deg);
  }
  100% {
    filter: hue-rotate(360deg);
  }
}

.animation-4 {
  animation: animation-4 3.5s steps(7, jump-none) infinite;
}

.animation-5 {
  filter: hue-rotate(var(--random-hue-factor));
  transition: filter 0.5s linear;
}

/* animations end */
